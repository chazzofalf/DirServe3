@page "/dir/{*url}"
@functions
{

    string? url { get; set; }
    string? base_dir { get; set; }
    string? strip_url
    {
        get
        {
            if (url is string ourl)
            {
                if  (ourl.EndsWith('/'))
                {
                    ourl = ourl.ToCharArray().Reverse().Skip(1).Reverse().Aggregate("", (prev, next) => $"{prev}{next}");

                }
                if (ourl.StartsWith('/'))
                {
                    ourl = ourl.ToCharArray().Skip(1).Aggregate("", (prev, next) => $"{prev}{next}");
                }
                return ourl;
            }
            else
            {
                return null;
            }

        }

    }
    string? parent_url
    {
        get
        {
            if (url is string ourl)
            {                
                ourl = string.Join('/', ourl.Split('/').Reverse().Skip(1).Reverse().ToArray());
                return $"/dir/{ourl}";
            }
            else
            {
                return null;
            }

        }
    }
    string? url_for_entry(string filename,bool isFile)
    {
        var outx = (string?)null;
        if (strip_url is string ostrip_url)
        {
            if (isFile && ostrip_url.Length > 0)
            {
                outx = $"/file/{ostrip_url}/{filename}";
            }
            else if (isFile)
            {
                outx = $"/file/{filename}";
            }
            else if (ostrip_url.Length > 0)
            {
                outx = $"/dir/{ostrip_url}/{filename}";
            }
            else
            {
                outx = $"/dir/{filename}";
            }
        }
        
        return outx;
    }
}
@model DirModel
@{
    ViewData["Title"] = "Home page";
    url = RouteData.Values["url"] as string;
    url = url != null ? url : "/";
    base_dir = AppContext.BaseDirectory;
    if (base_dir.EndsWith('/'))
    {
        base_dir = base_dir.ToCharArray().Reverse().Skip(1).Reverse().Aggregate("", (prev, next) => $"{prev}{next}");

    }
    
}


<div class="text-center">
    <h1 class="display-4">Dirserve Listing</h1>
    <h2>@url</h2>
    <br/>
    <h3><a href="@parent_url">Go Back</a></h3>
    @try
    {
        @if (new System.IO.DirectoryInfo($"{base_dir}/{url}").GetDirectories().Count() > 0)
        {
            <h3>Directories</h3>
            @foreach (var i in new System.IO.DirectoryInfo($"{base_dir}/{url}").GetDirectories().OrderBy((dir) => dir.Name))
            {
                <p><a href="@url_for_entry(i.Name,false)">@i.Name</a></p>
            }
        }
        @if (new System.IO.DirectoryInfo($"{base_dir}/{url}").GetDirectories().Count() > 0 && new System.IO.DirectoryInfo($"{base_dir}/{url}").GetFiles().Count() > 0)
        {
            <br />
        }
        @if (new System.IO.DirectoryInfo($"{base_dir}/{url}").GetFiles().Count() > 0)
        {
            <h3>Files</h3>
            @foreach (var i in new System.IO.DirectoryInfo($"{base_dir}/{url}").GetFiles().OrderBy((dir) => dir.Name))
            {
                <p><a href="@url_for_entry(i.Name,true)">@i.Name</a></p>
            }
        }
    }
    catch
    {
        <h3>Not Found!</h3>
       
            Response.StatusCode = 404;
        
    }


    

    
</div>
